# azure-pipelines.yml  (bootstrap, único)
trigger: none
pr: none
pool:
  vmImage: ubuntu-latest

steps:
- checkout: none

# Crear repo Azure si no existe
- task: Bash@3
  displayName: Ensure Azure Repo exists
  inputs:
    targetType: inline
    script: |
      set -euo pipefail
      org="https://dev.azure.com/<org>/"        # <-- pon tu org, termina en /
      proj="Automatizacióna"                     # <-- pon tu proyecto
      repo="exite"                              # <-- nombre repo destino
      base="$org$proj/_apis/git/repositories"
      b64=$(printf ':%s' "$(System.AccessToken)" | base64)
      if curl -fsS -H "Authorization: Basic $b64" "$base/$repo?api-version=7.0" >/dev/null; then
        echo "Repo $repo ya existe"
      else
        echo "Creando repo $repo"
        curl -fsS -X POST -H "Authorization: Basic $b64" -H "Content-Type: application/json" \
          -d "{\"name\":\"$repo\"}" "$base?api-version=7.0" >/dev/null
      fi

# Importar si vacío; si no, mirror desde GitHub
- task: Bash@3
  displayName: Import or mirror from GitHub
  inputs:
    targetType: inline
    script: |
      set -euo pipefail
      org="https://dev.azure.com/<org>/"        # <-- igual que arriba
      proj="Automatizacióna"
      repo="exite"
      gh_url="https://github.com/Yeison1994s/hotfix-lab-demo.git"  # público → sin PAT

      ado_http="$org$proj/_git/$repo"
      # ¿vacío?
      if [ -z "$(git ls-remote --heads "$ado_http" 2>/dev/null)" ]; then
        echo "Azure repo vacío → Import API"
        b64=$(printf ':%s' "$(System.AccessToken)" | base64)
        api="$org$proj/_apis/git/repositories/$repo/importRequests?api-version=7.0"
        curl -fsS -X POST -H "Authorization: Basic $b64" -H "Content-Type: application/json" \
          -d "{\"parameters\":{\"gitSource\":{\"url\":\"$gh_url\"}}}" "$api" >/dev/null
        echo "Import solicitado"
      else
        echo "Azure repo con contenido → mirror push"
        work=$(mktemp -d); cd "$work"
        git clone --mirror "$gh_url" mirror.git
        cd mirror.git
        ado_push="https://user:$(System.AccessToken)@${ado_http#https://}"
        git remote set-url --push origin "$ado_push"
        git push --mirror
        echo "Mirror completado"
      fi
